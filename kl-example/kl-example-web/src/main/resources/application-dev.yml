# 技术配置
spring:
#  kafka:
#    # 指定kafka server的地址，集群配多个，中间，逗号隔开
#    bootstrap-servers: ckafka-momow45e.ap-beijing.ckafka.tencentcloudmq.com:6018
#    consumer:
#      group-id: ewp-examples-dev
#    properties:
#      security:
#        protocol: SASL_PLAINTEXT
#      sasl:
#        mechanism: PLAIN
#        jaas:
##          config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="kafkaa" password="kafkaapswd_kcxt";'
#          config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="ckafka-momow45e#kafka_public" password="erwan365";'

  datasource:
    dynamic:
      primary: first
#      # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭（不使用AT和XA模式，可以设置false）
#      seata: ${seata.enabled}
#      # 支持XA及AT模式,默认AT
#      seata-mode: ${seata.data-source-proxy-mode}
      datasource:
        first:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3358/kl_examples?useUnicode=true&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8
          username: root
          password: ams2020
          druid:
            initial-size: 10
            max-active: 100
            min-idle: 10
        second:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3358/kl_examples?useUnicode=true&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8
          username: root
          password: ams2020
#          # 不启动seata代理的数据源
#          seata: false
          druid:
            initial-size: 10
            max-active: 100
            min-idle: 10
        tidb:
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://127.0.0.1:3358/kl_examples?useUnicode=true&useSSL=false&allowMultiQueries=true&serverTimezone=GMT%2B8
          username: root
          password: ams2020
          # 不启动seata代理的数据源
          seata: false
          druid:
            initial-size: 10
            max-active: 100
            min-idle: 10
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 1000
    lettuce:
      pool:
        max-active: 16
        max-idle: 16
        max-wait: 300
        min-idle: 0
#    password:
#    ssl:
#    timeout:
#    cluster:
#      nodes:
#    sentinel:
#      master:
#      nodes:
#
#dubbo:
#  cloud:
#    subscribed-services: ''
#  scan:
#    base-packages: com.ewp.examples.service
#  protocol:
#    name: dubbo
#    port: -1
#  # 单注册中心
#  registry:
#    address: spring-cloud://localhost
#  # 多注册中心
##  registries:
##    spring-cloud:
##      address: spring-cloud://localhost
##      default: true
##      group: ewp
##    nacos:
##      address: nacos://localhost:8848
##      group: ewp
#  # 自定义dubbo异常处理
#  provider:
#    filter: -exception
#
##Rocketmq配置
#rocketmq:
#  name-server: 49.232.4.136:9876
#  producer:
#    group: producer
#  topic:
#    heartBeat: monitor_rocketmq_heart_beat
#
#kafka:
#  topic:
#    heartBeat: monitor_kafka_heart_beat_test
#
#seata:
#  # 注意：不要忘记配置 spring.datasource.dynamic.seata 和 spring.datasource.dynamic.seata-mode
#  # 注意：服务对应的每个库（包括动态数据源和sharding）要添加 undo_log 表
#  # TODO 测试环境的seata-server尚未搭建完成，此处临时关闭
#  enabled: true
#  tx-service-group: business-service
#  # 避免和 dynamic-datasource 动态数据源冲突
#  enable-auto-data-source-proxy: false
#  # 使用动态数据源时，排除代理的数据源配置失效，请在动态数据源配置
#  # excludes-for-auto-proxying:
#  # 支持XA及AT模式,默认AT
#  data-source-proxy-mode: AT
#  service:
#    disable-global-transaction: false
#    grouplist:
#      default: 10.67.0.7:30891
#    vgroup-mapping:
#      business-service: default

log:
  level: INFO
  level.io.seata: DEBUG










